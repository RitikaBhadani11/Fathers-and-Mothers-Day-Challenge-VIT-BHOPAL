class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode dummyNode=new ListNode(-1);
        ListNode temp=dummyNode;
        dummyNode.next=null;
        ListNode t1=list1;
        ListNode t2=list2;
        while(t1!=null && t2!=null){
            if(t1.val<t2.val){
               temp.next=t1;
               
               t1=t1.next;
            }
            else{
                temp.next=t2;
                
                t2=t2.next;
            }
            temp=temp.next;
        }
        while(t1!=null){
            temp.next=t1;
            t1=t1.next;
            temp=temp.next;
        }
        while(t2!=null){
            temp.next=t2;
            t2=t2.next;
            temp=temp.next;
        }
        return dummyNode.next;
        
    }
}
//Add digits
class Solution {
    int solve(int num){
       if(num>=0 && num<=9){
        return num;
       }
       int sum=0;
       while(num>0){
        int digit=num%10;
        sum=sum+digit;
        num=num/10;
       }
       return solve(sum);
    }
    public int addDigits(int num) {
        return solve(num);
        

        
        
    }
}
