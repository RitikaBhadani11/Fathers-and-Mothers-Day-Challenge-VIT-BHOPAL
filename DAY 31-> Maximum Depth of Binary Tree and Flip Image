//Maximum Depth 
class Solution {
    public int maxDepth(TreeNode root) {
        if(root==null){
            return 0;
        }
        int lh=maxDepth(root.left);
        int rh=maxDepth(root.right);
        return 1+Math.max(lh,rh);
        
    }
}
//Flip Image
class Solution {
    void reverse(int[] arr,int n1,int n2){
        while(n1<n2){
            int temp=arr[n1];
            arr[n1]=arr[n2];
            arr[n2]=temp;
            n1++;
            n2--;
        }
    }
    public int[][] flipAndInvertImage(int[][] image) {
        int n=image.length;
        for(int i=0;i<n;i++){
            reverse(image[i],0,n-1);
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(image[i][j]==0){
                    image[i][j]=1;
                }
                else{
                    image[i][j]=0;
                }
            }
        }
        return image;
        
    }
}
