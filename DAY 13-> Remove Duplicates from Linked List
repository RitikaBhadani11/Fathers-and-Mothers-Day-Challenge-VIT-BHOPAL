class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null || head.next == null) return head;

        // Dummy node to handle edge cases
        ListNode dummy = new ListNode(0);
        dummy.next = head;

        ListNode prev = dummy;
        ListNode current = head;

        while (current != null) {
            // If current node is a start of duplicates
            if (current.next != null && current.val == current.next.val) {
                int duplicateVal = current.val;
                // Skip all nodes with this value
                while (current != null && current.val == duplicateVal) {
                    current = current.next;
                }
                prev.next = current;
            } else {
                // Move prev pointer if current is unique
                prev = prev.next;
                current = current.next;
            }
        }

        return dummy.next;
    }
}
