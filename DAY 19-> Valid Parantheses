
import java.util.Stack;

class Solution {
    public boolean isValid(String s) {
        Stack<Character> st = new Stack<>();

        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);

            if (ch == '(' || ch == '{' || ch == '[') {
                st.push(ch);
            } else {
                if (st.isEmpty()) {
                    return false; // If stack is empty, no matching opening bracket
                }

                char top = st.peek();
                if ((ch == ')' && top == '(') ||
                    (ch == '}' && top == '{') ||
                    (ch == ']' && top == '[')) {
                    st.pop(); // Pop the matched opening bracket
                } else {
                    return false; // Mismatched closing bracket
                }
            }
        }
        return st.isEmpty(); // If stack is empty, brackets are balanced
    }
}
